openapi: 3.0.1
info:
  title: Recycler.API | v1
  version: 1.0.0
paths:
  /Log:
    get:
      tags:
        - Log
      parameters:
        - name: MaxReceivedLogId
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Log'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Log'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Log'
  /Orders:
    get:
      tags:
        - Orders
      parameters:
        - name: id
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericResponseOfOrderDto'
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponseOfOrderDto'
            text/json:
              schema:
                $ref: '#/components/schemas/GenericResponseOfOrderDto'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/NotFound'
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
            text/json:
              schema:
                $ref: '#/components/schemas/NotFound'
    post:
      tags:
        - Orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateOrderCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateOrderCommand'
        required: true
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericResponseOfOrderDto'
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponseOfOrderDto'
            text/json:
              schema:
                $ref: '#/components/schemas/GenericResponseOfOrderDto'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/NotFound'
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
            text/json:
              schema:
                $ref: '#/components/schemas/NotFound'
  /Orders/{orderNumber}:
    get:
      tags:
        - Orders
      parameters:
        - name: orderNumber
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericResponseOfOrderDto'
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponseOfOrderDto'
            text/json:
              schema:
                $ref: '#/components/schemas/GenericResponseOfOrderDto'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/NotFound'
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
            text/json:
              schema:
                $ref: '#/components/schemas/NotFound'
  /api/BankNotification:
    post:
      tags:
        - BankNotification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankNotificationDto'
          text/json:
            schema:
              $ref: '#/components/schemas/BankNotificationDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BankNotificationDto'
        required: true
      responses:
        '200':
          description: OK
  /api/Companies:
    post:
      tags:
        - Companies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCompanyCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateCompanyCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateCompanyCommand'
        required: true
      responses:
        '201':
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CreateCompanyResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCompanyResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CreateCompanyResponse'
  /logistics:
    post:
      tags:
        - Logistics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogisticsRequestDto'
          text/json:
            schema:
              $ref: '#/components/schemas/LogisticsRequestDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LogisticsRequestDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LogisticsResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/LogisticsResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/LogisticsResponseDto'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Internal Server Error
  /api/Logistics/consumer-deliveries:
    post:
      tags:
        - Logistics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsumerLogisticsDeliveryNotificationRequestDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ConsumerLogisticsDeliveryNotificationRequestDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ConsumerLogisticsDeliveryNotificationRequestDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ConsumerLogisticsDeliveryResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumerLogisticsDeliveryResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ConsumerLogisticsDeliveryResponseDto'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Internal Server Error
  /machine-payment-confirmation:
    post:
      tags:
        - MachinePaymentConfirmation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachinePaymentConfirmationDto'
          text/json:
            schema:
              $ref: '#/components/schemas/MachinePaymentConfirmationDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MachinePaymentConfirmationDto'
        required: true
      responses:
        '200':
          description: OK
  /api/Machines/receive:
    post:
      tags:
        - Machines
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReceiveMachineCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/ReceiveMachineCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReceiveMachineCommand'
        required: true
      responses:
        '201':
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ReceivedMachineDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ReceivedMachineDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ReceivedMachineDto'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Machines:
    get:
      tags:
        - Machines
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReceivedMachineDto'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReceivedMachineDto'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReceivedMachineDto'
  /Materials:
    get:
      tags:
        - Materials
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RawMaterialDto'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RawMaterialDto'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RawMaterialDto'
  /recycler/notifyme:
    post:
      tags:
        - Notifications
      responses:
        '200':
          description: OK
  /machine-failure:
    post:
      tags:
        - Notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetNotificationOfMachineFailureCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/GetNotificationOfMachineFailureCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/GetNotificationOfMachineFailureCommand'
        required: true
      responses:
        '200':
          description: OK
  /internal/revenue/company-orders:
    get:
      tags:
        - Revenue
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RevenueReportDto'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RevenueReportDto'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RevenueReportDto'
  /Simulation:
    post:
      tags:
        - Simulation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartSimulationCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/StartSimulationCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/StartSimulationCommand'
        required: true
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StartSimulationResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/StartSimulationResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/StartSimulationResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Internal Server Error
  /internal/stock:
    get:
      tags:
        - Stock
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StockSet'
            application/json:
              schema:
                $ref: '#/components/schemas/StockSet'
            text/json:
              schema:
                $ref: '#/components/schemas/StockSet'
components:
  schemas:
    BankNotificationDto:
      type: object
      properties:
        transaction_number:
          type: string
        status:
          type: string
        amount:
          type: number
          format: double
        timestamp:
          type: number
          format: double
        description:
          type: string
        from:
          type: string
        to:
          type: string
    ConsumerLogisticsDeliveryNotificationRequestDto:
      type: object
      properties:
        status:
          type: string
        modelName:
          type: string
        quantity:
          type: integer
          format: int32
    ConsumerLogisticsDeliveryResponseDto:
      required:
        - accountNumber
      type: object
      properties:
        referenceNo:
          type: string
          format: uuid
        amount:
          type: number
          format: double
        accountNumber:
          type: string
    CreateCompanyCommand:
      type: object
      properties:
        name:
          type: string
          nullable: true
        roleId:
          type: integer
          format: int32
        keyId:
          type: integer
          format: int32
          nullable: true
    CreateCompanyResponse:
      type: object
      properties:
        companyId:
          type: integer
          format: int32
        companyNumber:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        role:
          type: string
          nullable: true
    CreateOrderCommand:
      required:
        - companyName
        - orderItems
      type: object
      properties:
        companyName:
          type: string
        orderItems:
          type: array
          items:
            $ref: '#/components/schemas/CreateOrderItemDto'
    CreateOrderItemDto:
      type: object
      properties:
        rawMaterialName:
          type: string
        quantityInKg:
          type: integer
          format: int32
    GenericResponseOfOrderDto:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/OrderDto'
        isSuccess:
          type: boolean
        message:
          type: string
          nullable: true
        timeStamp:
          type: string
          format: date-time
    GetNotificationOfMachineFailureCommand:
      type: object
      properties:
        machineName:
          type: string
          nullable: true
        failureQuantity:
          type: integer
          format: int32
        simulationDate:
          type: string
          format: date-time
        simulationTime:
          type: string
    Log:
      type: object
      properties:
        id:
          type: integer
          format: int32
        requestSource:
          type: string
        requestEndpoint:
          type: string
        requestBody:
          type: string
        response:
          type: string
        timestamp:
          type: string
          format: date-time
    LogisticsItemDto:
      type: object
      properties:
        name:
          type: string
          nullable: true
        quantity:
          type: integer
          format: int32
    LogisticsRequestDto:
      type: object
      properties:
        id:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/LogisticsItemDto'
          nullable: true
    LogisticsResponseDto:
      type: object
      properties:
        message:
          type: string
          nullable: true
        logisticsRecordId:
          type: string
          nullable: true
    MachinePaymentConfirmationDto:
      type: object
      properties:
        orderId:
          type: string
        totalWeight:
          type: number
          format: double
    NotFound:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
    OrderDto:
      type: object
      properties:
        orderId:
          type: integer
          format: int32
        orderNumber:
          type: string
          format: uuid
        orderStatus:
          $ref: '#/components/schemas/OrderStatus'
        createdAt:
          type: string
          format: date-time
        companyId:
          type: integer
          format: int32
        orderExpiresAt:
          type: string
          format: date-time
        orderItems:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemDto'
        accountNumber:
          type: string
      nullable: true
    OrderItemDto:
      type: object
      properties:
        rawMaterial:
          $ref: '#/components/schemas/RawMaterial'
        quantityInKg:
          type: integer
          format: int32
        pricePerKg:
          type: number
          format: double
    OrderStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
      nullable: true
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
    RawMaterial:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        pricePerKg:
          type: number
          format: double
    RawMaterialDto:
      required:
        - name
      type: object
      properties:
        name:
          type: string
        availableQuantityInKg:
          type: number
          format: double
        pricePerKg:
          type: number
          format: double
    ReceivedMachineDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        machineId:
          type: integer
          format: int32
        receivedAt:
          type: string
          format: date-time
        isOperational:
          type: boolean
    ReceiveMachineCommand:
      type: object
      properties:
        machineId:
          type: integer
          format: int32
    RevenueOrderItemDto:
      required:
        - materialName
      type: object
      properties:
        materialName:
          type: string
        quantityKg:
          type: integer
          format: int32
        totalPrice:
          type: number
          format: double
    RevenueReportDto:
      required:
        - companyName
        - orderNumber
        - status
        - items
      type: object
      properties:
        companyName:
          type: string
        orderNumber:
          type: string
        status:
          type: string
        createdAt:
          type: string
          format: date-time
        items:
          type: array
          items:
            $ref: '#/components/schemas/RevenueOrderItemDto'
        companyTotalOrders:
          type: number
          format: double
    StartSimulationCommand:
      type: object
      properties:
        epochStartTime:
          type: integer
          format: int64
          nullable: true
    StartSimulationResponse:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
    StockItem:
      type: object
      properties:
        name:
          type: string
        quantity:
          type: integer
          format: int32
        unit:
          type: string
    StockSet:
      type: object
      properties:
        rawMaterials:
          type: array
          items:
            $ref: '#/components/schemas/StockItem'
          nullable: true
        phones:
          type: array
          items:
            $ref: '#/components/schemas/#/properties/rawMaterials/items'
tags:
  - name: Log
  - name: Orders
  - name: BankNotification
  - name: Companies
  - name: Logistics
  - name: MachinePaymentConfirmation
  - name: Machines
  - name: Materials
  - name: Notifications
  - name: Revenue
  - name: Simulation
  - name: Stock
