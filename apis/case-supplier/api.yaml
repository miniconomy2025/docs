openapi: 3.0.0
info:
  title: Case Supplier API
  version: 1.0.0

servers:
  - url: http://case-supplier-api.projects.bbdgrad.com/api

tags:
  - name: Case
    description: Case product and inventory
  - name: Orders
    description: Case order details and handling
  - name: Simulation
    description: Simulation triggers and controls
  - name: Logistics
    description: Pickup and delivery operations
  - name: Payments
    description: Payment confirmations from bank

paths:
  /cases:
    get:
      tags:
        - Case
      summary: Get cases in stock and current price per unit
      description: Returns available case inventory and pricing
      responses:
        200:
          description: Available cases and price per unit
          content:
            application/json:
              schema:
                type: object
                properties:
                  available_units:
                    type: integer
                    example: 2456
                  price_per_unit:
                    type: number
                    example: 100.0

  /orders:
    post:
      tags:
        - Orders
      summary: Create a new case order
      description: Create a new order for case from customers
      requestBody:
        required: true
        content:
          application/json:
            schema:
                type: object
                properties:
                  quantity:
                    type: integer
                    example: 20
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  order_status_id:
                    type: integer
                    example: 1
                  quantity:
                    type: integer
                    example: 20
                  total_price:
                    type: number
                    example: 2000.0
                  ordered_at:
                    type: string
                    example: "2025-07-06T09:35:20.819Z"
        '400':
          description: Invalid request or insufficient stock

  /orders/{id}:
    get:
      tags:
        - Orders
      summary: Get order status and details
      description: Retrieve the current status and details of a specific order
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Order ID
      responses:
        '200':
          description: Order details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  order_status_id:
                    type: integer
                    example: 1
                  quantity:
                    type: integer
                    example: 10
                  total_price:
                    type: integer
                    example: 150
                  ordered_at:
                    type: string
                    example: "2025-07-01T06:00:00.000Z"
                  status:
                    type: string
                    example: "payment_pending"
        '404':
          description: Order not found
    delete:
      tags:
        - Orders
      summary: Cancel order if payment not made
      description: Retrieve confirmation of cancellation
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Order ID
      responses:
        '204':
          description: Order cancelled
        '400':
          description: Order cannot be cancelled
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "This order can no longer be cancelled."
        '404':
          description: Order not found

  /simulation:
    post:
      tags:
        - Simulation
      summary: Start the simulation
      description: Starts the simulation for our server
      responses:
        200:
          description: Successfully started simulation 
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Successfully started simulation"

  /machines/failure:
    post:
      tags:
        - Simulation
      summary: Machine break simulation event
      description: Triggers a machine break simulation event
      requestBody:
        required: true
        content:
          application/json:
            schema:
                type: object
                properties:
                  machineName:
                    type: string
                    example: "case_machine"
                  failureQuantity:
                    type: integer
                    example: 2
                  simulationDate:
                    type: string
                    example: "2050-01-15"
                  simulationTime:
                    type: string
                    example: "14:30:45"
                  
      responses:
        200:
          description: Successfully triggered and handled event
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Successfully handled simulation machine break event"
        400:
          description: Successfully triggered and handled event
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unknown simulation machine name"
  /logistics:
    post:
      tags:
        - Logistics
      summary: Handle logistics operations - both deliveries and pickups
      description: |
        Unified endpoint for logistics operations:
        - **DELIVERY**: Bulk logistics delivers materials/equipment to us
        - **PICKUP**: Bulk logistics picks up screens from us for customers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogisticsRequest'
      responses:
        200:
          description: Logistics operation completed
        400:
          description: Invalid logistics request
        404:
          description: Order not found or not ready
        
  /payment:
    post:
      tags:
        - Payments
      summary: Process payment confirmation from bank for screen orders
      description: |
        Endpoint called by the commercial bank to confirm payments.
        Updates order status and payment amounts.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRequest'
      responses:
        200:
          description: Payment processed successfully
        400:
          description: Invalid payment request

components:
  schemas:
    LogisticsRequest:
      type: object
      required:
        - id
        - type
        - quantity
      properties:
        id:
          type: integer
          description: Order ID (for pickup) or Shipment ID (for delivery)
          example: 67890
        type:
          type: string
          enum: [PICKUP, DELIVERY]
          description: Type of logistics operation
          example: "DELIVERY"
        quantity:
          type: integer
          minimum: 1
          description: Quantity being moved
          example: 1000
        
    PaymentRequest:
      type: object
      required:
        - referenceId
        - accountNumber
        - amount
      properties:
        referenceId:
          type: string
          description: Order ID as reference
          example: "12345"
        accountNumber:
          type: string
          description: Paying account number
          example: "2345"
        amount:
          type: number
          format: decimal
          description: Amount paid in this transaction
          example: 15000.00