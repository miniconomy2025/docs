openapi: 3.0.3
info:
  title: Electronics Supplier API
  version: 1.0.0
  description: API for getting stock, prices, and making orders for our Electronics.

servers:
  - url: https://electronics-supplier-api.projects.bbdgrad.com

tags:
  - name: Electronics
    description: Get details of electronics
  - name: Orders
    description: Order electronics and get the details of the order
  - name: Logistics
    description: For Bulk Logistics integration

paths:
  /electronics:
    get:
      tags: [Electronics]
      summary: Get the details of our electronic units
      description: Get how many units we have and how much per unit
      responses:
        200:
          description: Details of our electronics
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ElectronicsDetails'

  /orders:
    post:
      tags: [Orders]
      summary: Create a new electronics order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ElectronicsOrderRequest'
      responses:
        201:
          description: Electronics order created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElectronicsOrderResponse'
              

  /orders/{orderId}:
    get:
      tags: [Orders]
      summary: Get an electronics order
      parameters:
        - in: path
          name: orderId
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Electronics order details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElectronicsOrder'
  
  /logistics:
    post:
      summary: Handle a logistics delivery or pickup
      tags: [Logistics]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogisticsRequestDto'
      responses:
        '200':
          description: Success message and remaining quantity
          content:
            application/json:
              schema:
                type: object
                properties:
                  Message:
                    type: string
                    example: Delivered 5 machines for supplier ID 2 from order 123
                  Remaining:
                    type: integer
                    example: 0
        '400':
          description: Invalid request or nothing to deliver/pick up
          content:
            application/json:
              schema:
                type: string
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                type: string

  /simulation:
    post:
      summary: Start the simulation
      tags: [Simulation]
      responses:
        '200':
          description: Simulation started
    get:
      summary: Get simulation state
      tags: [Simulation]
      responses:
        '200':
          description: Simulation state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimulationState'
    delete:
      summary: Stop the simulation
      tags: [Simulation]
      responses:
        '200':
          description: Simulation stopped
  
  /machines/failure:
    post:
      summary: Report a machine failure (disaster)
      tags: [Machines]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachineFailureDto'
      responses:
        '201':
          description: Disaster recorded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisasterDto'
        '400':
          description: Invalid request or no machines to break


components:
  schemas:
    LogisticsRequestDto:
      type: object
      required:
        - id
        - type
        - items
      properties:
        id:
          type: string
          description: Order ID or Pickup Request ID
          example: "123"
        type:
          type: string
          description: Type of logistics operation ("PICKUP" or "DELIVERY")
          enum: [PICKUP, DELIVERY]
          example: DELIVERY
        items:
          type: array
          items:
            $ref: '#/components/schemas/LogisticsItemDto'

    LogisticsItemDto:
      type: object
      required:
        - name
        - quantity
      properties:
        name:
          type: string
          description: Name of the item (e.g., "machine", "copper")
          example: machine
        quantity:
          type: integer
          description: Quantity of the item
          example: 5

    SimulationState:
      type: object
      properties:
        isRunning:
          type: boolean
        startTimeUtc:
          type: string
          format: date-time
          nullable: true
        currentDay:
          type: integer
        simulationUnixEpoch:
          type: integer
          description: Seconds since 2050-01-01T00:00:00Z (simulation epoch)
          example: 86400
        canonicalSimulationDate:
          type: string
          format: date-time
          description: Canonical simulation date (e.g., 2050-01-02T00:00:00Z)
          example: 2050-01-02T00:00:00Z

    MachineFailureDto:
      type: object
      required:
        - machineName
        - failureQuantity
      properties:
        machineName:
          type: string
          example: electronics_machine
        failureQuantity:
          type: integer
          minimum: 1
          example: 5
        simulationDate:
          type: string
          format: date
          example: 2050-01-15
        simulationTime:
          type: string
          example: 14:30:45

    DisasterDto:
      type: object
      properties:
        disasterId:
          type: integer
          example: 1
        brokenAt:
          type: number
          format: decimal
          example: 2.500
        machinesAffected:
          type: integer
          example: 5
        brokenAtCanonical:
          type: string
          format: date-time
          example: 2050-01-15T14:30:45Z

    ElectronicsOrderRequest:
      type: object
      properties:
        quantity:
          type: integer
          example: 1000

    ElectronicsOrderResponse:
      type: object
      properties:
        orderId:
          type: integer
          example: 5432
          description: The order ID of your order
        quantity:
          type: integer
          example: 1000
          description: How many units of electronics you ordered
        amountDue:
          type: number
          example: 5000
          description: How much money you owe us
        bankNumber:
          type: string
          example: "123456123456"
          description: "Our bank account number for you to pay us"

    ElectronicsOrder:
      type: object
      properties:
        orderId:
          type: integer
          example: 5432
        status:
          type: string
          example: "InTransit"
        orderedAt:
          type: number
          example: 27
        quantity:
          type: integer
          example: 1000
        remainingAmount:
          type: number
          example: 500
    ElectronicsDetails:
      type: object
      properties:
        availableStock:
          type: integer
          example: 2000
        pricePerUnit:
          type: number
          example: 5.0
