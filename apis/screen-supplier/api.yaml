openapi: 3.0.3
info:
  title: Screen Supplier API
  description: API for screen suppliers
  version: 1.0.0
  contact:
    name: Screen Supplier Service
servers:
  - url: https://screen-supplier-api.projects.bbdgrad.com

paths:
  /screens:
    get:
      tags:
        - Products
      summary: Get available screens and current pricing
      description: Returns the quantity of screens available for purchase and current unit price
      operationId: getScreens
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
              example:
                screens:
                  quantity: 150
                  price: 75

  /order:
    post:
      tags:
        - Orders
      summary: Create a new screen order
      description: Place an order for screens. Returns payment details and order information.
      operationId: createOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderRequest'
            example:
              quantity: 50
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrderResponse'
              example:
                orderId: 123
                totalPrice: 3750
                bankAccountNumber: "12345"
        '400':
          description: Invalid request

  /order/{id}:
    get:
      tags:
        - Orders
      summary: Get order status and details
      description: Retrieve detailed information about a specific order
      operationId: getOrderStatus
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Order ID
      responses:
        '200':
          description: Order details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderStatusResponse'
              example:
                orderId: 123
                quantity: 50
                unitPrice: 75
                totalPrice: 3750
                status: "waiting_payment"
                amountPaid: 1000
                remainingBalance: 2750
                isFullyPaid: false
        '404':
          description: Order not found

  /payment:
    post:
      tags:
        - Payments
      summary: Process payment notification
      description: Endpoint for commercial bank to notify about received payments
      operationId: processPayment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionNotification'
            example:
              transaction_number: "TXN-98765"
              status: "completed"
              amount: 1000
              timestamp: 1642678800.0
              description: "123"
              to: "ACC-12345"
              from: "CUSTOMER-ACC"
      responses:
        '200':
          description: Payment processed successfully
        '400':
          description: Invalid payment notification

  /logistics:
    post:
      tags:
        - Logistics
      summary: Handle logistics operations
      description: Handle both deliveries (incoming materials/equipment) and pickups (outgoing screens)
      operationId: handleLogistics
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogisticsRequest'
            examples:
              delivery:
                summary: Material delivery
                value:
                  id: 456
                  type: "DELIVERY"
                  items:
                    - name: "sand"
                      quantity: 1000
                      measurementType: "KG"
              pickup:
                summary: Screen pickup
                value:
                  id: 123
                  type: "PICKUP"
                  items:
                    - name: "screens"
                      quantity: 50
                      measurementType: "UNIT"
      responses:
        '200':
          description: Logistics operation completed successfully
        '400':
          description: Invalid logistics request
        '404':
          description: Order not found

  /machine-failure:
    post:
      tags:
        - Equipment
      summary: Report machine failures
      description: Endpoint for Hand of Há¸—phaistos to report equipment failures
      operationId: reportMachineFailure
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachineFailureRequest'
            example:
              machineName: "screen_machine"
              failureQuantity: 2
      responses:
        '200':
          description: Machine failure processed successfully
        '400':
          description: Invalid failure report

        '404':
          description: No machines available to fail


  /simulation:
    post:
      tags:
        - Simulation
      summary: Start simulation
      description: Start the simulation with specified Unix epoch timestamp
      operationId: startSimulation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimulationStartRequest'
            example:
              epochStartTime: 1642678800
      responses:
        '200':
          description: Simulation started successfully
          content:
            application/json:
              example:
                success: true
                
        '400':
          description: Invalid simulation start request

    get:
      tags:
        - Simulation
      summary: Get simulation status
      description: Get current simulation status and timing information
      operationId: getSimulationStatus
      responses:
        '200':
          description: Simulation status retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimulationStatusResponse'
              example:
                isRunning: true
                currentDay: 5
                simulationDateTime: "2050-01-06T00:00:00Z"
                timeUntilNextDay: "01:23:45"

    delete:
      tags:
        - Simulation
      summary: Stop simulation
      description: Stop the running simulation and clear database
      operationId: stopSimulation
      responses:
        '200':
          description: Simulation stopped successfully

components:
  schemas:
    # Product schemas
    ProductResponse:
      type: object
      properties:
        screens:
          $ref: '#/components/schemas/Screens'
      required:
        - screens

    Screens:
      type: object
      properties:
        quantity:
          type: integer
          description: Available quantity of screens
          minimum: 0
        price:
          type: integer
          description: Current unit price per screen
          minimum: 0
      required:
        - quantity
        - price

    # Order schemas
    CreateOrderRequest:
      type: object
      properties:
        quantity:
          type: integer
          description: Number of screens to order
          minimum: 1
      required:
        - quantity

    CreateOrderResponse:
      type: object
      properties:
        orderId:
          type: integer
          description: Unique order identifier
        totalPrice:
          type: integer
          description: Total price for the order
        bankAccountNumber:
          type: string
          description: Bank account to send payment to
      required:
        - orderId
        - totalPrice
        - bankAccountNumber

    OrderStatusResponse:
      type: object
      properties:
        orderId:
          type: integer
          description: Order identifier
        quantity:
          type: integer
          description: Ordered quantity
        unitPrice:
          type: integer
          description: Price per unit at time of order
        totalPrice:
          type: integer
          description: Total order price
        status:
          $ref: '#/components/schemas/OrderStatus'
        amountPaid:
          type: integer
          nullable: true
          description: Amount paid so far
        remainingBalance:
          type: integer
          description: Amount still owed
        isFullyPaid:
          type: boolean
          description: Whether the order is fully paid
      required:
        - orderId
        - quantity
        - unitPrice
        - totalPrice
        - status
        - remainingBalance
        - isFullyPaid

    # Payment schemas
    TransactionNotification:
      type: object
      properties:
        transaction_number:
          type: string
          description: Unique transaction identifier
        status:
          type: string
          description: Transaction status
        amount:
          type: integer
          description: Transaction amount
          minimum: 1
        timestamp:
          type: number
          format: double
          description: Unix timestamp of transaction
        description:
          type: string
          description: Transaction description (should contain order ID)
        to:
          type: string
          description: Recipient account
        from:
          type: string
          description: Sender account
      required:
        - amount
        - description

    # Logistics schemas
    LogisticsRequest:
      type: object
      properties:
        id:
          type: integer
          description: Shipment ID for deliveries, Order ID for pickups
          minimum: 1
        type:
          type: string
          enum: [DELIVERY, PICKUP]
          description: Type of logistics operation
        items:
          type: array
          items:
            $ref: '#/components/schemas/PickupRequestItem'
          minItems: 1
      required:
        - id
        - type
        - items

    PickupRequestItem:
      type: object
      properties:
        name:
          type: string
          description: Item name (sand, copper, screens, etc.)
        quantity:
          type: integer
          description: Quantity of items
          minimum: 1
        measurementType:
          type: string
          enum: [KG, UNIT]
          description: Unit of measurement
      required:
        - name
        - quantity


    # Equipment schemas
    MachineFailureRequest:
      type: object
      properties:
        machineName:
          type: string
          description: Name of the failed machine
        failureQuantity:
          type: integer
          description: Number of machines that failed
          minimum: 1
      required:
        - machineName
        - failureQuantity


    # Simulation schemas
    SimulationStartRequest:
      type: object
      properties:
        epochStartTime:
          type: integer
          format: int64
          description: Unix epoch timestamp for simulation start
      required:
        - epochStartTime


    SimulationStatusResponse:
      type: object
      properties:
        isRunning:
          type: boolean
          description: Whether simulation is currently running
        currentDay:
          type: integer
          description: Current simulation day
        simulationDateTime:
          type: string
          format: date-time
          description: Current simulation date and time
        timeUntilNextDay:
          type: string
          description: Time remaining until next simulation day
      required:
        - isRunning
        - currentDay
        - simulationDateTime
        - timeUntilNextDay

    # Enum schemas
    OrderStatus:
      type: string
      enum:
        - waiting_payment
        - waiting_collection
        - collected
        - abandoned
      description: |
        Order status values:
        * `waiting_payment` - Order placed, waiting for customer payment
        * `waiting_collection` - Order paid, waiting for pickup
        * `collected` - Order completed and collected
        * `abandoned` - Order abandoned due to processing failures


tags:
  - name: Products
    description: Screen inventory and pricing
  - name: Orders
    description: Order management and status
  - name: Payments
    description: Payment processing
  - name: Logistics
    description: Delivery and pickup operations
  - name: Equipment
    description: Equipment failure reporting
  - name: Simulation
    description: Simulation control